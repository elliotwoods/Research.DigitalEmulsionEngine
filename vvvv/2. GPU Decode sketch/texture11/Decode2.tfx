Texture2D Input: PREVIOUS;
Texture2D Previous <string uiname="Previous";>;

SamplerState s0 <bool visible=false;string uiname="Sampler";> {Filter=MIN_MAG_MIP_POINT; AddressU=CLAMP;AddressV=CLAMP;};
float2 R:TARGETSIZE;
float thresholdOffset = 0.01f;

cbuffer controls:register(b0){
	float Fader <float uimin=0.0;float uimax=1.0;> =0.5;
	float Smooth <float uimin=0.0;float uimax=1.0;> =0.25;
};

#define bld(op,c0,c1) float4(lerp((c0*c0.a+c1*c1.a*(1-c0.a))/saturate(c0.a+c1.a*(1-c0.a)),(op),c0.a*c1.a).rgb,saturate(c0.a+c1.a*(1-c0.a)))

float4 pThreshold(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
	float input = (x * R).x;
	float4 result = (float4) 1;
    return float4(x.x, x.y, 0, 1);
}


technique10 Mix{
	pass P1 <string format="R16G16_UNorm"; > {
		SetPixelShader(CompileShader(ps_4_0,pThreshold()));
	}
}
