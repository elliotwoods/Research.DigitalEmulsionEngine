Texture2D<uint2> Input : PREVIOUS <string uiname="Data";>;
Texture1D Lookup <string uiname="Lookup";>;

float2 R:TARGETSIZE;

cbuffer controls:register(b0){
};

#define bld(op,c0,c1) float4(lerp((c0*c0.a+c1*c1.a*(1-c0.a))/saturate(c0.a+c1.a*(1-c0.a)),(op),c0.a*c1.a).rgb,saturate(c0.a+c1.a*(1-c0.a)))

uint2 pToBinary(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
	float2 uv = R * x;
	
	uint2 input = Input[uv];
	uint2 output;
	output.x = Lookup[input.x].r;
	output.y = Lookup[input.y].r;
	return output;
}


technique10 Mix{
	pass P1  <string format="R16G16_UInt"; >
	{
		SetPixelShader(CompileShader(ps_4_0,pToBinary()));
	}
}
